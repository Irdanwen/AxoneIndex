const hre = require("hardhat");

async function main() {
  console.log("üöÄ D√©ploiement des smart contracts Axone Finance...");

  // R√©cup√©ration du compte d√©ployeur
  const [deployer] = await ethers.getSigners();
  console.log("üìù D√©ploiement avec le compte:", deployer.address);
  console.log("üí∞ Balance du compte:", (await deployer.provider.getBalance(deployer.address)).toString());

  // D√©ploiement du ReferralRegistry
  console.log("\nüîß D√©ploiement du ReferralRegistry...");
  const ReferralRegistry = await hre.ethers.getContractFactory("ReferralRegistry");
  const referralRegistry = await ReferralRegistry.deploy(deployer.address);
  await referralRegistry.waitForDeployment();
  
  const referralRegistryAddress = await referralRegistry.getAddress();
  console.log("‚úÖ ReferralRegistry d√©ploy√© √† l'adresse:", referralRegistryAddress);

  // Whitelist du d√©ployeur pour les tests
  console.log("\nüîß Whitelist du d√©ployeur...");
  await referralRegistry.whitelistDirect(deployer.address);
  console.log("‚úÖ D√©ployeur whitelist√©");

  // D√©ploiement du token Axone (si le contrat existe)
  try {
    console.log("\nüîß D√©ploiement du AxoneToken...");
    const AxoneToken = await hre.ethers.getContractFactory("AxoneToken");
    const axoneToken = await AxoneToken.deploy(deployer.address, deployer.address, deployer.address);
    await axoneToken.waitForDeployment();
    
    const axoneTokenAddress = await axoneToken.getAddress();
    console.log("‚úÖ AxoneToken d√©ploy√© √† l'adresse:", axoneTokenAddress);

    // V√©rification du d√©ploiement
    const totalSupply = await axoneToken.totalSupply();
    console.log("üìä Supply total:", ethers.formatEther(totalSupply), "AXN");

    console.log("\nüéâ D√©ploiement termin√© avec succ√®s!");
    console.log("\nüìã Adresses des contrats:");
    console.log("ReferralRegistry:", referralRegistryAddress);
    console.log("AxoneToken:", axoneTokenAddress);
  } catch (error) {
    console.log("‚ö†Ô∏è AxoneToken non trouv√©, d√©ploiement du ReferralRegistry uniquement");
    console.log("\nüéâ D√©ploiement termin√© avec succ√®s!");
    console.log("\nüìã Adresses des contrats:");
    console.log("ReferralRegistry:", referralRegistryAddress);
  }
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("‚ùå Erreur lors du d√©ploiement:", error);
    process.exit(1);
  });
